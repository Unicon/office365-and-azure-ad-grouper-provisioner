#################################
## Google Apps
#################################
changeLog.consumer.google.class = edu.internet2.middleware.changelogconsumer.googleapps.GoogleAppsChangeLogConsumer
changeLog.consumer.google.quartzCron =

changeLog.consumer.google.serviceAccountPKCS12FilePath = /opt/grouper.apiBinary-2.2.2/conf/googleServiceAccount.p12
changeLog.consumer.google.serviceAccountEmail = grouper@regal-stone-120503.iam.gserviceaccount.com
changeLog.consumer.google.serviceImpersonationUser = wgthom@psonitics.com
changeLog.consumer.google.domain=psonitics.com

# Maps grouper names to google groups. e.g. affiliation:staff -> grouper-staff@psonitics.com
changeLog.consumer.google.groupIdentifierExpression=grouper-${groupPath.replace("affiliations:","")}

# Tells google provisioner to ignore all Google groups expect ones that match grouper-.* regex
changeLog.consumer.google.googleGroupFilter=grouper-.*

# Make grouper authoritative for google group membership. Members added via Google will be removed if not in grouper group.
changeLog.consumer.google.ignoreExtraGoogleMembers=false

# Recommended setting so consumer doesn't gum up the works...let FullSync take care of errors
changeLog.consumer.google.retryOnError = false

changeLog.consumer.google.subjectIdentifierExpression=${subjectId}

#################################
## PSP
#################################
# changeLog.consumer.psp.class = edu.internet2.middleware.psp.grouper.PspChangeLogConsumer

#the quartz cron is a cron-like string.  it defaults to every minute on the minute (since the temp to change log job runs
#at 10 seconds to each minute).  it defaults to this: 0 * * * * ?                                          
#though it will stagger each one by 2 seconds                                                              
# http://www.quartz-scheduler.org/documentation/quartz-1.x/tutorials/crontrigger                           
# changeLog.consumer.psp.quartzCron = 0 * * * * ?
                                                                                                           
# To retry processing a change log entry if an error occurs, set retryOnError to true. Defaults to false.  
# changeLog.consumer.psp.retryOnError = false
                                                                                                           
# To run full provisioning synchronizations periodically, provide the class name which provides a 'public void fullSync()' method.
# changeLog.psp.fullSync.class = edu.internet2.middleware.psp.grouper.PspChangeLogConsumer
                                                                                                           
# Schedule full synchronizations. Defaults to 5 am : 0 0 5 * * ?.                                          
# changeLog.psp.fullSync.quartzCron = 0 0 5 * * ?
                                                                                                           
# Run a full synchronization job at startup. Defaults to false.                                            
# changeLog.psp.fullSync.runAtStartup = false
                                                                                                           
# Omit diff responses from bulk response to conserve memory.                                               
# changeLog.psp.fullSync.omitDiffResponses = true
                                                                                                           
# Omit sync responses from bulk response to conserve memory.                                               
# changeLog.psp.fullSync.omitSyncResponses = true

#################################
## LDAP connections
#################################
# specify the ldap connection with user, pass, url
# the string after "ldap." is the ID of the connection, and it should not have
# spaces or other special chars in it.  In this case is it "personLdap"
 
#note the URL should start with ldap: or ldaps: if it is SSL.  
#It should contain the server and port (optional if not default), and baseDn,
#e.g. ldaps://ldapserver.school.edu:636/dc=school,dc=edu
ldap.demo.url = ldap://localhost:389/dc=example,dc=edu
 
#optional, if authenticated
#ldap.personLdap.user = uid=someapp,ou=people,dc=myschool,dc=edu
 
#optional, if authenticated note the password can be stored encrypted in an external file
#ldap.personLdap.pass = secret
 
#optional, if you are using tls, set this to true.  Generally you will not be using an SSL URL to use TLS...
#ldap.personLdap.tls = false
 
#optional, if using sasl
#ldap.personLdap.saslAuthorizationId =
#ldap.personLdap.saslRealm =
 
#optional (note, time limit is for search operations, timeout is for connection timeouts),
#most of these default to vt-ldap defaults.  times are in millis
#validateOnCheckout defaults to true if all other validate methods are false
#ldap.personLdap.batchSize =
#ldap.personLdap.countLimit =
#ldap.personLdap.timeLimit =
#ldap.personLdap.timeout =
#ldap.personLdap.minPoolSize =
#ldap.personLdap.maxPoolSize =
#ldap.personLdap.validateOnCheckIn =
#ldap.personLdap.validateOnCheckOut =
#ldap.personLdap.validatePeriodically =
#ldap.personLdap.validateTimerPeriod =
#ldap.personLdap.pruneTimerPeriod =
#if connections expire after a certain amount of time, this is it, in millis, defaults to 300000 (5 minutes)
#ldap.personLdap.expirationTime =

#make the paths fully qualified and not relative to the loader group.
loader.ldap.requireTopStemAsStemFromConfigGroup=false
